using System;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.ChangeTracking;
using $rootnamespace$.$models$.$safeItemNamePlural$;

namespace $rootnamespace$.$brokers$.Storages
{
    public partial class StorageBroker
    {
        public DbSet<$safeItemNameSingular$> $safeItemNamePlural$ { get; set; }

        public async ValueTask<$safeItemNameSingular$> Insert$safeItemNameSingular$Async($safeItemNameSingular$ $parameterSafeItemNameSingular$) =>
            await InsertAsync($parameterSafeItemNameSingular$);

        public IQueryable<$safeItemNameSingular$> SelectAll$safeItemNamePlural$()=> SelectAll<$safeItemNameSingular$>();

        public async ValueTask<$safeItemNameSingular$> Select$safeItemNameSingular$ByIdAsync(Guid $parameterSafeItemNameSingular$Id) =>
            await SelectAsync<$safeItemNameSingular$>($parameterSafeItemNameSingular$Id);

        public async ValueTask<$safeItemNameSingular$> Update$safeItemNameSingular$Async($safeItemNameSingular$ $parameterSafeItemNameSingular$) =>
            await UpdateAsync($parameterSafeItemNameSingular$);
    }
}
