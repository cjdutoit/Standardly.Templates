{
  "name": "CONTROLLERS: API Controller",
  "description": "Generates an API Controller for GET, POST, PUT, DELETE operations",
  "templateType": "API",
  "projectsRequired": "Api",
  "sortOrder": 5,
  "tasks": [
    {
      "name": "CONTROLLERS: $safeItemNameSingular$ Controller - POST",
      "branchName": "controllers-$parameterSafeItemNamePluralLower$-post",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "CONTROLLERS: POST $safeItemNameSingular$",
          "executionFolder": "$projectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Controllers\\001_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: POST $safeItemNameSingular$\""
            },
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"CONTROLLERS: $safeItemNameSingular$ Controller - POST\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: GET $safeItemNamePlural$",
      "branchName": "controllers-$parameterSafeItemNamePluralLower$-getall",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "CONTROLLERS: GET ALL $safeItemNamePlural$",
          "executionFolder": "$projectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Controllers\\002_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: GET ALL $safeItemNamePlural$\""
            },
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"CONTROLLERS: GET $safeItemNamePlural$\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: GET $safeItemNameSingular$ By Id",
      "branchName": "controllers-$parameterSafeItemNamePluralLower$-getbyid",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "CONTROLLERS: GET $safeItemNameSingular$ By Id",
          "executionFolder": "$projectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Controllers\\003_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: GET $safeItemNameSingular$ By Id\""
            },
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"CONTROLLERS: GET $safeItemNameSingular$ By Id\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: PUT $safeItemNameSingular$",
      "branchName": "controllers-$parameterSafeItemNamePluralLower$-put",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "CONTROLLERS: PUT $safeItemNameSingular$",
          "executionFolder": "$projectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Controllers\\004_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: PUT $safeItemNameSingular$\""
            },
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"CONTROLLERS: PUT $safeItemNameSingular$\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "CONTROLLERS: DELETE $safeItemNameSingular$",
      "branchName": "controllers-$parameterSafeItemNamePluralLower$-delete",
      "actions": [
        {
          "name": "Create branch",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "CONTROLLERS: DELETE $safeItemNameSingular$",
          "executionFolder": "$projectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Controllers\\005_ItemController.cs.txt",
              "target": "$projectFolder$\\$controllers$\\$safeItemNamePlural$Controller.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"CONTROLLERS: DELETE $safeItemNameSingular$\""
            },
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "primaryAction": false,
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"CONTROLLERS: DELETE $safeItemNameSingular$\" -b \" \""
            }
          ]
        }
      ]
    }
  ],
  "cleanupTasks": [
    "----------------------------------------------------",
    "CONTROLLERS: $safeItemNamePlural$Controller",
    "----------------------------------------------------",
    "* Resolve / remove any TODO items in the task list if any",
    "* Link the pull request(s) to related issues by adding e.g. #CLOSES 123 to the description",
    "* Add screenshots to each of the pull request to show it working and handling the errors",
    "* Review Draft Pull Requests (and add more commits by pushing to any of the branches if needed):"
  ]
}