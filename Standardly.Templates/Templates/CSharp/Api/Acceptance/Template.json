{
  "name": "ACCEPTANCE: Acceptance Tests",
  "description": "Generates acceptance tests for POST, GET, PUT and DELETE requests",
  "templateType": "API",
  "projectsRequired": "Api",
  "sortOrder": 6,
  "tasks": [
    {
      "name": "001 - ACCEPTANCE: Should POST $safeItemNameSingular$",
      "branchName": "acceptance-$parameterSafeItemNamePluralLower$-post",
      "actions": [
        {
          "name": "Create branch for the POST Acceptance Tests",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $previousBranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git fetch origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            },
            {
              "name": "Install DeepCloner from NuGet",
              "instruction": "dotnet add $acceptanceTestProjectFile$ package DeepCloner"
            },
            {
              "name": "Install FluentAssertions from NuGet",
              "instruction": "dotnet add $acceptanceTestProjectFile$ package FluentAssertions"
            },
            {
              "name": "Install Microsoft.CSharp from NuGet",
              "instruction": "dotnet add $acceptanceTestProjectFile$ package Microsoft.CSharp"
            },
            {
              "name": "Install Moq from NuGet",
              "instruction": "dotnet add $acceptanceTestProjectFile$ package Moq"
            },
            {
              "name": "Install Tynamix.ObjectFiller from NuGet",
              "instruction": "dotnet add $acceptanceTestProjectFile$ package Tynamix.ObjectFiller"
            },
            {
              "name": "Install Xeption from NuGet",
              "instruction": "dotnet add $acceptanceTestProjectFile$ package Xeption"
            }
          ]
        },
        {
          "name": "BROKERS: ApiBroker",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Post\\001_ApiBroker.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\$brokers$\\ApiBroker.cs",
              "replace": false
            },
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Post\\001_ApiTestCollection.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\$brokers$\\ApiTestCollection.cs",
              "replace": false
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: ApiBroker\""
            }
          ]
        },
        {
          "name": "Add $safeItemNameSingular$ Model",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Post\\002_Item.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\$models$\\$safeItemNamePlural$\\$safeItemNameSingular$.cs",
              "replace": false
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"DATA: $safeItemNameSingular$ Model\""
            }
          ]
        },
        {
          "name": "ACCEPTANCE: Should POST $safeItemNameSingular$",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Post\\003_ApiBroker.Items.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\$brokers$\\ApiBroker.$safeItemNamePlural$.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Post\\003_ItemsApiTests.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Post\\003_ItemsApiTests.Logic.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.Logic.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"ACCEPTANCE: Should POST $safeItemNameSingular$\""
            }
          ]
        },
        {
          "name": "Push branch for POST Acceptance Tests",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"ACCEPTANCE: Should POST $safeItemNameSingular$\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "002 - ACCEPTANCE: Should GET ALL $safeItemNamePlural$",
      "branchName": "acceptance-$parameterSafeItemNamePluralLower$-getall",
      "actions": [
        {
          "name": "Create branch for the GET ALL Acceptance Tests",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "executions": [
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "ACCEPTANCE: Should GET ALL $safeItemNamePlural$",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\GetAll\\001_ItemsApiTests.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\GetAll\\001_ItemsApiTests.Logic.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.Logic.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"ACCEPTANCE: Should GET ALL $safeItemNamePlural$\""
            }
          ]
        },
        {
          "name": "Push branch for GET ALL Acceptance Tests",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"ACCEPTANCE: Should GET ALL $safeItemNamePlural$\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "003 - ACCEPTANCE: Should GET $safeItemNameSingular$ By Id",
      "branchName": "acceptance-$parameterSafeItemNamePluralLower$-getbyid",
      "actions": [
        {
          "name": "Create branch for the GET ALL Acceptance Tests",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "executions": [
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "ACCEPTANCE: Should GET $safeItemNameSingular$ By Id",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\GetById\\001_ItemsApiTests.Logic.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.Logic.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"ACCEPTANCE: Should GET $safeItemNameSingular$ By Id\""
            }
          ]
        },
        {
          "name": "Push branch for GET By Id Acceptance Tests",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"ACCEPTANCE: Should GET $safeItemNameSingular$ By Id\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "004 - ACCEPTANCE: Should PUT $safeItemNameSingular$",
      "branchName": "acceptance-$parameterSafeItemNamePluralLower$-put",
      "actions": [
        {
          "name": "Create branch for the PUT Acceptance Tests",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "executions": [
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "ACCEPTANCE: Should PUT $safeItemNameSingular$",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Put\\001_ItemsApiTests.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Put\\001_ItemsApiTests.Logic.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.Logic.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"ACCEPTANCE: Should PUT $safeItemNameSingular$\""
            }
          ]
        },
        {
          "name": "Push branch for PUT Acceptance Tests",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/$currentBranch$"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"ACCEPTANCE: Should PUT $safeItemNameSingular$\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "005 - ACCEPTANCE: Should DELETE $safeItemNameSingular$",
      "branchName": "acceptance-$parameterSafeItemNamePluralLower$-delete",
      "actions": [
        {
          "name": "Create branch for the DELETE Acceptance Tests",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "executions": [
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/$currentBranch$ users/$username$/$previousBranch$"
            }
          ]
        },
        {
          "name": "ACCEPTANCE: Should DELETE $safeItemNameSingular$",
          "executionFolder": "$acceptanceTestProjectFolder$",
          "files": [
            {
              "template": "$templateFolder$\\CSharp\\Api\\Acceptance\\Delete\\001_ItemsApiTests.Logic.cs.txt",
              "target": "$acceptanceTestProjectFolder$\\Apis\\$safeItemNamePlural$ApiTests.Logic.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"ACCEPTANCE: Should DELETE $safeItemNameSingular$\""
            }
          ]
        },
        {
          "name": "Push branch for DELETE Acceptance Tests",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/acceptance-$parameterSafeItemNamePluralLower$-delete"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"ACCEPTANCE: Should DELETE $safeItemNameSingular$\" -b \" \""
            }
          ]
        }
      ]
    }
  ],
  "cleanupTasks": [
    "----------------------------------------------------",
    "ACCEPTANCE: $safeItemNamePlural$",
    "----------------------------------------------------",
    "* Add propeties to the $safeItemNameSingular$ model in the Acceptance project",
    "* Resolve / remove any TODO items in the task list if any",
    "* Link the pull request(s) to related issues by adding e.g. #CLOSES 123 to the description",
    "* Review Draft Pull Requests (and add more commits by pushing to any of the branches if needed):"
  ]
}